%h2 Who is Coming?

- if production? && REGISTRATION_PHASE[@year.year] == :closed
  %p Registration for the #{@year.year} Go Congress has not yet begun.

- else
  %p
    There are #{ @attendees.size } people registered,
    including #{@kyu_count} kyu-level players, #{@dan_count} dan-level players,
    #{pluralize(@pro_count, 'pro')}, and #{pluralize(@np_count, 'person')} with no rank.
    The average person has been to #{@avg_congresses} congresses.

    - if (@youngest_attendee.present? and @oldest_attendee.present?)
      The youngest attendee is
      = distance_of_time_in_words @youngest_attendee.birth_date.to_date, Time.now.to_date
      old and the oldest is
      = distance_of_time_in_words @oldest_attendee.birth_date.to_date, Time.now.to_date
      old.

    - if @avg_age.present?
      The average age is #{@avg_age}.

    There are #{@male_count} men and #{@female_count} women.

  - unless anyone_signed_in?
    %p
      Are you coming?  Please
      = link_to 'register!', new_user_registration_path

  %table.semantic.fullwidth.zebra
    %thead
      %tr
        %th
        - %w[given_name family_name rank country state created_at].each do |c|
          - drn = (c == params[:sort]) ? @opposite_direction : :asc
          %th= link_to trl_attr(:attendee, c), :sort => c, :direction => drn
    %tbody
      - @attendees.each_with_index do |a,i|
        %tr{:class => if a.anonymous then "understated" end }
          %td= i + 1
          %td= a.get_given_name(true)
          %td= a.get_family_name(true)
          %td= a.get_rank_name
          %td= a.anonymize_attribute :country
          %td= a.anonymize_attribute :state
          %td= a.created_at.to_date.to_formatted_s(:rfc822)
